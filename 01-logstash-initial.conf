input {
  lumberjack {
    # The port to listen on
    port => 5000
    type => "logs"
    ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
    ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
  }

  jmx {
    #Required
    path => "/opt/logstash/conf/jmx"
    #Optional, default 60s
    polling_frequency => 15
    type => "jmx"
    #Optional, default 4
    nb_thread => 4
  }

}

filter {
  if [type] == "apache_access_log" {
    grok {
      match => { "message" => "%{HOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATH:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:response} (?:%{GREEDYDATA:bytes}|-) \"%{GREEDYDATA:referer}\" \"%{GREEDYDATA:user_agent}\" %{NUMBER:responsetime} %{NUMBER:responsetime_full}"}
    }
    
    mutate {
        gsub => [ "bytes", "-", "0"]
    }
    mutate {
        convert => { "responsetime" => "integer" }
        convert => { "responsetime_full" => "integer" }
        convert => { "bytes" => "integer" }

      }
    date { match => [ "@timestamp" , "dd/MM/yyyy:HH:mm:ss Z" ] } 
  }
  if [type] == "apache_error_log" {
    grok {
        match => { "message" =>"\[(?<timestamp>%{DAY:day} %{MONTH:month} %{MONTHDAY} %{TIME} %{YEAR})\] \[%{WORD:class}\] \[%{WORD:originator} %{IP:clientip}\] %{GREEDYDATA:errmsg}" }
    }
  }
  if [type] == "jmx" {
    if ("SystemCpuLoad" in [metric_path]) {
      ruby {
        code => "event['cpuLoad'] = event['metric_value_number'] * 1000"
      }
    }
  }
}

output {
  stdout { codec => rubydebug}
    elasticsearch {
      host => "elkbchloadbalancer-1348676922.us-east-1.elb.amazonaws.com"
        protocol => "http"
    }
}